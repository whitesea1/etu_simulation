<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find etu_simulation)/models:$(find fetch_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <arg name="robot" default="fetch"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="world" default="etu_1"/>
  <arg name="rviz_args" value="-d $(find etu_simulation)/rviz/config.rviz" />

  <!-- Start Gazebo with a blank world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(find etu_simulation)/worlds/$(arg world).world"/>
  </include>

  <!-- Oh, you wanted a robot? -->
  <include file="$(find fetch_gazebo)/launch/include/$(arg robot).launch.xml" />
  <include file="$(find fetch_navigation)/launch/fetch_nav.launch">
    <arg name="map_file" value="$(find etu_simulation)/maps/$(arg world)/map.yaml" />
  </include>

  <!-- <include file="$(find etu_simulation)/launch/include/turtle.launch.xml" /> -->

  <node name="$(anon rviz)" pkg="rviz" type="rviz" required="true"
     respawn="false" output="screen" args="$(arg rviz_args)">
  </node>
  <!-- Get out pose server running -->
  <node pkg="etu_simulation" name="amcl_pose_server" type="pose_server.py" />

  <!-- run some tests -->
  <node name="simulator" pkg='etu_simulation' type="run_moves.py" required='true' output="screen">
    <param name="gazebo_goals" value="$(find etu_simulation)/poses/$(arg world)/gazebo_poses.yaml" />
    <param name="amcl_goals" value="$(find etu_simulation)/poses/$(arg world)/amcl_poses.yaml" />
    <param name="robot" value="$(arg robot)" />
    <param name="gazebo_frame" value="world" />
    <param name="amcl_frame" value="map" />
    <param name="results_folder" value="$(find etu_simulation)/data/$(arg world)" />
  </node>



</launch>
